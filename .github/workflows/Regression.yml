name: Regression
on:
#   schedule:
#     - cron: "*/15 * * * *" 
  workflow_dispatch:
  push:
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  build:
    name: Build Duckdb
    runs-on: ubuntu-20.04
    env:
      CC: gcc-10
      CXX: g++-10
      GEN: ninja
      BUILD_BENCHMARK: 1
      BUILD_JEMALLOC: 1
      CORE_EXTENSIONS: "json;tpch;tpcds;httpfs;inet"
    steps:
      - name: Checkout old
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: 'main'
          fetch-depth: 1
          path: old
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install
        shell: bash
        run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build && pip install requests
  
      - name: Build
        shell: bash
        run: |
          cd old 
          make
      - uses: actions/upload-artifact@v4
        with:
          path: old
          name: old

  regression-test-benchmark-runner:
    name: Regression Tests
    runs-on: ubuntu-20.04
    needs: build
    # strategy:
    #   matrix:
    #     iteration: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
      # fail-fast: false
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: old
          path: old
      # - name: Set up benchmarks
      #   shell: bash
      #   run: |
      #     mkdir new
      #     cp -r old/* new

      # - name: Setup upterm session
      #   uses: owenthereal/action-upterm@v1
      - name: Regression Test RealNest 
        shell: bash
        run: |
          cd old
          mkdir -p duckdb_benchmark_data
          wget -q https://duckdb-blobs.s3.amazonaws.com/data/realnest/realnest.duckdb --output-document=duckdb_benchmark_data/real_nest.duckdb
          mkdir -p ../new/duckdb_benchmark_data
          cp duckdb_benchmark_data/real_nest.duckdb ../new/duckdb_benchmark_data/real_nest.duckdb
          mkdir .github
          mkdir .github/regression
          echo "benchmark/realnest/01_aggregate-first-level-struct-members.benchmark" > .github/regression/realnest.csv
          echo "benchmark/realnest/02_list_sort.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/03_create_table_from_unnested_structs.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/04_list_transform_and_list_aggregate.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/05_list_filter.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/06_list_filter_on_unnested_structure.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/07_list_unique_on_transformed_and_aggregated_list.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/08_count_map_keys.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/09_array_agg.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/11_list_sort_reduce_transform.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/12_map_list_values.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/13_multi_join_nested_data_with_filtering.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/14_list_slice.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/15_list_sort.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/16_most_common_list_aggregates.benchmark" >> .github/regression/realnest.csv
          echo "benchmark/realnest/17_list_aggregates_histogram_stddev_mode.benchmark" >> .github/regression/realnest.csv
      
          chmod +x build/release/benchmark/benchmark_runner
          chmod +x ../new/build/release/benchmark/benchmark_runner
          
          # echo "benchmark/realnest/17_list_aggregates_histogram_stddev_mode.benchmark" > repro.csv
          # echo "benchmark/realnest/17_list_aggregates_histogram.benchmark" >> repro.csv
          # echo "benchmark/realnest/17_list_aggregates_mode.benchmark" >> repro.csv
          # echo "benchmark/realnest/17_list_aggregates_stddev.benchmark" >> repro.csv

          # mv repro.csv .github/regression/
          # cp ../test_runner.py scripts/regression/
          # cp ../17_* benchmark/realnest/
          
          for i in {1..50}; do
            echo Running iteration $i...
          #   # python scripts/regression/test_runner.py --old=build/release/benchmark/benchmark_runner --new=../new/build/release/benchmark/benchmark_runner --benchmarks=.github/regression/repro.csv --verbose >> log_file_$i.txt
            # python scripts/regression/test_runner.py --old=build/release/benchmark/benchmark_runner --new=../new/build/release/benchmark/benchmark_runner --benchmarks=.github/regression/realnest.csv --verbose >> log_file_${{ matrix.iteration }}.txt --threads=2
            python ../test_runner.py --old=build/release/benchmark/benchmark_runner --new=build/release/benchmark/benchmark_runner --benchmarks=.github/regression/realnest.csv --verbose >> log_file_$i.txt --threads=2
            cat log_file_$i.txt
            # cat log_file_${{ matrix.iteration }}.txt
            echo Finished iteration $i âœ…
          done
          # echo Old is faster in $(cat log_files* | grep Old | grep roughly | wc -l) cases out of 50
          # echo New is faster in $(cat log_files* | grep New | grep roughly | wc -l) cases out of 50


      # - uses: actions/upload-artifact@v4
      #   with:
      #     path: old/log_file*.txt
      #     name: log_files
